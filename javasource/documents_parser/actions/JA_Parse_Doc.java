// This file was generated by Mendix Studio Pro.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.

package documents_parser.actions;

import org.apache.poi.xwpf.usermodel.*;
import java.io.FileInputStream;
import java.io.IOException;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.core.Core;
import com.mendix.systemwideinterfaces.core.IMendixObject;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.InputStream;
import com.mendix.systemwideinterfaces.core.UserAction;

public class JA_Parse_Doc extends UserAction<java.lang.String>
{
	/** @deprecated use ParamDoc.getMendixObject() instead. */
	@java.lang.Deprecated(forRemoval = true)
	private final IMendixObject __ParamDoc;
	private final system.proxies.FileDocument ParamDoc;

	public JA_Parse_Doc(
		IContext context,
		IMendixObject _paramDoc
	)
	{
		super(context);
		this.__ParamDoc = _paramDoc;
		this.ParamDoc = _paramDoc == null ? null : system.proxies.FileDocument.initialize(getContext(), _paramDoc);
	}

	@java.lang.Override
	public java.lang.String executeAction() throws Exception
	{
		// BEGIN USER CODE
                 IContext context=this.context();
	            StringBuilder content = new StringBuilder();
		
			
                         try {
        XWPFDocument doc = new XWPFDocument(Core.getFileDocumentContent(getContext(), this.ParamDoc.getMendixObject()));
                           // Read Paragraphs
                           for (IBodyElement element : doc.getBodyElements()) {
            if (element instanceof XWPFParagraph) {
                XWPFParagraph paragraph = (XWPFParagraph) element;
                content.append(paragraph.getText()).append("\n");
            } else if (element instanceof XWPFTable) {
                XWPFTable table = (XWPFTable) element;
                for (XWPFTableRow row : table.getRows()) {
                    for (XWPFTableCell cell : row.getTableCells()) {
                        for (XWPFParagraph paragraph : cell.getParagraphs()) {
                            content.append(paragraph.getText()).append("\n");
                        }
                    }
                }
            }
        }
        return content.toString();}
 
			 catch (Exception e) {
			e.printStackTrace();
			}

			return content.toString();
			
		
		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 * @return a string representation of this action
	 */
	@java.lang.Override
	public java.lang.String toString()
	{
		return "JA_Parse_Doc";
	}

	// BEGIN EXTRA CODE
	// END EXTRA CODE
}
